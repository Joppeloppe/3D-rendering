cbuffer Material_t : register(b1)
{
	float4 specular;
	float4 ambient;
	float4 diffuse;

	//Nytt
	float3 lightDirection;
	float specularPower;
	float ligtintensity;
	float3 cameraPos;
};



struct PSIn
{
	float4 Pos  : SV_Position;
	float3 Normal : NORMAL;
	float2 TexCoord : TEX;

	float3 worldpos : WORLD_POS;
};

//-----------------------------------------------------------------------------------------
// PixelShader: PSSceneMain
//-----------------------------------------------------------------------------------------
float4 PS_main(PSIn input) : SV_Target
{	
    float3 viewdir = cameraPos - input.worldpos;
    float3 nviewdir = normalize(viewdir);
 
    float4 nspecular = pow(saturate(dot(normalize(reflect(normalize(-lightDirection), normalize(input.Normal))), nviewdir)), specularPower);
    float4 ndiffuse = dot(normalize(input.Normal), normalize(-lightDirection)) * diffuse;
   
    return float4(ambient+ndiffuse+nspecular);

	//return float4(specular);

	//return float4(input.Normal*0.5+0.5, 1);
	//return float4(input.TexCoord,0,1);
}